ext {
    versions = [
            support              : "26.0.1",
            okHttp               : "3.8.1",
            espresso             : '3.0.0',
            espressoRunner       : '1.0.0',
            powerMock            : '1.6.6',
            hamcrest             : '1.3',
            dagger               : '2.11',
            robolectric          : '3.2.2',
            rxKotlin             : '2.1.0',
            rxAndroid            : '2.0.1',
            mockito              : '2.8.47',
            junit                : '4.12',
            timber               : '4.5.1',
            firebase             : '11.4.0',
            constraint           : '1.1.0',
            recyclerviewanimators: '2.2.7',
            picasso              : '2.5.2',
            picassoDownloader    : '1.1.0',
            lifecycle            : '1.0.0-alpha9',
            retrofit             : '2.3.0',
            moshi                : '1.5.0',
            rxViews              : '2.0.0',
            retrofit_converter   : '2.3.0',
            rxcall_adapter       : '2.3.0',
            multiDex             : '1.0.2',
            traceur              : '1.0.1',
            mockwebserver        : '3.9.0',
            flex                 : '0.3.1',
            inject               : "1",
            crashlytics          : "2.9.1",
            firebase_work        : "1.0.0-alpha01",

            shimmer              : "0.1.0@aar",
            showcase             : "1.0.0",
            autofit              : "0.2.1",
            dialogs              : "0.9.6.0"


    ]

    mockito = [mockito: "org.mockito:mockito-core:$versions.mockito"]
    junit = [junit: "junit:junit:$versions.junit"]

    supportDeps = [
            constraint       : "androidx.constraintlayout:constraintlayout:$versions.constraint",
            cardView         : "com.android.support:cardview-v7:$versions.support",
            appcompatV7      : "com.android.support:appcompat-v7:$versions.support",
            design           : "com.android.support:design:$versions.support",
            recyclerView     : "com.android.support:recyclerview-v7:$versions.support",
            supportAnnotation: "com.android.support:support-annotations:$versions.support",
            multiDex         : "com.android.support:multidex:$versions.multiDex"
    ]

    rxJava = [
            rxKotlin : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
            rxView   : "com.jakewharton.rxbinding2:rxbinding-kotlin:$versions.rxViews",
            traceur  : "com.tspoon.traceur:traceur:$versions.traceur"
    ]
    googlePlay = [
            firebaseCore  : "com.google.firebase:firebase-core:$versions.firebase",
            firebaseConfig: "com.google.firebase:firebase-config:$versions.firebase",
            fcm           : "com.google.firebase:firebase-messaging:$versions.firebase",
            work          : "android.arch.work:work-runtime:$versions.firebase_work",
            performance : "com.google.firebase:firebase-perf:$versions.firebase"
    ]


    unitTest = [
            harcrestCore       : "org.hamcrest:hamcrest-core:$versions.hamcrest",
            harmcrestLib       : "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrestIntegration: "org.hamcrest:hamcrest-integration:$versions.hamcrest",
            robolectric        : "org.robolectric:robolectric:$versions.robolectric",
            supportAnnotation  : "com.android.support:support-annotations:$versions.support",
            kotlinTest         : "org.jetbrains.kotlin:kotlin-test:$kotlin_version",
            kotlinJunit        : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            webserver          : "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"

    ] + junit + mockito

    androidTests = [
            espressoCore   : "com.android.support.test.espresso:espresso-core:$versions.espresso",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:$versions.espresso",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:$versions.espresso",
            testRunner     : "com.android.support.test:runner:$versions.espressoRunner",
            testRules      : "com.android.support.test:rules:$versions.espressoRunner",
    ] + mockito

    logging = [
            timber     : "com.jakewharton.timber:timber:$versions.timber",
            crashlytics: "com.crashlytics.sdk.android:crashlytics:$versions.crashlytics"

    ]

    network = [
            retrofit         : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            moshi            : "com.squareup.moshi:moshi-kotlin:$versions.moshi",
            picasso          : "com.squareup.picasso:picasso:$versions.picasso",
            picassoDownloader: "com.jakewharton.picasso:picasso2-okhttp3-downloader:$versions.picassoDownloader",
            converter        : "com.squareup.retrofit2:converter-moshi:$versions.retrofit_converter",
            callAdapter      : "com.squareup.retrofit2:adapter-rxjava2:$versions.rxcall_adapter"
    ]

    dagger = [
            dagger       : "com.google.dagger:dagger:$versions.dagger",
            daggerAndroid: "com.google.dagger:dagger-android:$versions.dagger",
            daggerSupport: "com.google.dagger:dagger-android-support:$versions.dagger"
    ]
    annotationProcessors = [
            dagger       : "com.google.dagger:dagger-compiler:$versions.dagger",
            daggerAndroid: "com.google.dagger:dagger-android-processor:$versions.dagger"

    ]
    ui = [
            shimmer : "com.facebook.shimmer:shimmer:$versions.shimmer",
            showcase: "com.github.faruktoptas:FancyShowCaseView:$versions.showcase",
            autofit : "me.grantland:autofittextview:$versions.autofit",
            dialogs : "com.afollestad.material-dialogs:commons:$versions.dialogs"
    ]

    daggerLibs = dagger.values()
    supportLibs = supportDeps.values()
    rxJavaLibs = rxJava.values()
    unitTestLibs = unitTest.values()
    networkLibs = network.values()
    annotationProcLibs = annotationProcessors.values()
    androidTestsLibs = androidTests.values() + supportLibs
    googlePlayLibs = googlePlay.values()
    loggingLibs = logging.values()
    uiLibs = ui.values()
    leakCannary = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
}
